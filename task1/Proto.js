let animal = {
    eats: true,
    walk() {
        alert("Animal walk");
    }
};

let rabbit = {
    jumps: true,
    __proto__: animal
};

let longEar = {
    earLength: 10,
    __proto__: rabbit
};

// walk взят из цепочки прототипов
longEar.walk(); // Animal walk
alert(longEar.jumps); // true (из rabbit)


// Есть только два ограничения:

// Ссылки не могут идти по кругу. JavaScript выдаст ошибку, если мы попытаемся назначить __proto__ по кругу.
// Значение __proto__ может быть объектом или null. Другие типы игнорируются.


let animal1 = {
    jumps: null
};
let rabbit1 = {
    __proto__: animal,
    jumps: true
};

alert(rabbit1.jumps); // true

delete rabbit1.jumps;

alert(rabbit1.jumps); // ? null

delete animal1.jumps;

alert(rabbit1.jumps); // ? undefined
//


//
let head = {
    glasses: 1
};

let table = {
    pen: 3,
    __proto__: head
};

let bed = {
    sheet: 1,
    pillow: 2,
    __proto__: table
};

let pockets = {
    money: 2000,
    __proto__: bed
};

// С помощью свойства __proto__ задайте прототипы так, чтобы поиск любого свойства выполнялся по следующему пути: pockets → bed → table → head. Например, pockets.pen должно возвращать значение 3 (найденное в table), а bed.glasses – значение 1 (найденное в head).
// Ответьте на вопрос: как быстрее получить значение glasses – через pockets.glasses или через head.glasses? При необходимости составьте цепочки поиска и сравните их.




// 1. Создайте конструктор "Фигура", который принимает два аргумента - ширину и высоту фигуры. У фигуры должны быть методы для получения и изменения ширины и высоты.
// 2. Создайте конструктор "Прямоугольник", который наследует от конструктора "Фигура" и добавляет метод для вычисления площади прямоугольника.
// 3. Создайте конструктор "Круг", который наследует от конструктора "Фигура" и добавляет метод для вычисления площади круга.
// 4. Создайте экземпляр прямоугольника и выведите его ширину, высоту и площадь.
// 5. Создайте экземпляр круга и выведите его ширину, высоту и площадь.
// 6. Создайте метод "периметр" для конструктора "Фигура", который будет вычислять периметр фигуры.
// 7. Создайте метод "периметр" для конструктора "Прямоугольник", который будет вычислять периметр прямоугольника.
// 8. Создайте метод "периметр" для конструктора "Круг", который будет вычислять периметр круга.
// 9. Создайте экземпляр прямоугольника и выведите его площадь и периметр.
// 10. Создайте экземпляр круга и выведите его площадь и периметр.


Function.prototype.defer = function (ms) {
    setTimeout(this, ms)
}
function f() {
    console.log("Hello!");
}

f.defer(5000);


Function.prototype.defer = function (ms) {
    setTimeout(this, ms)
}

function f(a, b) {
    alert(a + b);
}

f.defer(1000)(1, 2); // выведет 3 через 1 секунду.


const promise1 = new Promise((resolve, reject) => {
    setTimeout(() => {
        resolve('foo');
    }, 300);
});

promise1.then((value) => {
    console.log(value);
    // Expected output: "foo"
});

console.log(promise1);
// Expected output: [object Promise]

promise1.then().then().then()
    .catch()
    .finally()
promise1.race()


const promise2 = new Promise((resolve, reject) => {
    setTimeout(resolve, 500, 'one');
});

const promise3 = new Promise((resolve, reject) => {
    setTimeout(resolve, 100, 'two');
});

Promise.race([promise2, promise3]).then((value) => {
    console.log(value);
    // Both resolve, but promise2 is faster
});


var p1 = Promise.resolve(3);
var p2 = 1337;
var p3 = new Promise((resolve, reject) => {
    setTimeout(resolve, 100, "foo");
});

Promise.all([p1, p2, p3]).then((values) => {
    console.log(values);
});


// 1. Задача: Напишите функцию, которая принимает время в мс и возвращает Promise, который будет выполнен через указанное время.
// 2. Задача: Реализовать функцию, которая отправляет HTTP - запрос и возвращает Promise с данными, полученными в ответ.
// 3. Задача: Создайте функцию, которая принимает массив чисел и возвращает Promise, который будет выполнен только в том случае, если все числа в массиве являются положительными.
// 4. Задача: Создайте функцию, которая асинхронно загружает изображение по указанному URL и возвращает Promise, который будет выполнен с загруженным изображением.
// 5. Задача: Реализовать функцию, которая принимает два числа и возвращает Promise, который будет выполнен с результатом их суммы.
// 6. Задача: Напишите функцию, которая принимает массив промисов и возвращает новый Promise, который будет выполнен, когда все промисы в массиве будут завершены.
// 7. Задача: Создайте функцию, которая выполняет асинхронную операцию и возвращает Promise с результатом.Если операция завершилась успешно, Promise будет выполнен с результатом операции.Если операция завершилась с ошибкой, Promise будет отклонен с соответствующей ошибкой.
// 8. Задача: Реализуйте функцию, которая принимает число и возвращает Promise, который будет выполнен с true, если число простое, и с false в противном случае.
// 9. Задача: Создайте функцию, которая принимает массив Promise - объектов и возвращает Promise, который будет выполнен с результатами выполнения всех промисов.Результат будет доступен в виде массива значений.
// 10. Задача: Напишите функцию, которая принимает строку и возвращает Promise, который будет выполнен с количеством гласных букв в строке.